---
title: "proj_3_sowmya"
format: html
editor: visual
---

For an example analysis using `tidylog` I'll be using the `eurovision` dataset found in `tidytuesday`. The dataset and dictionarycan be found [here.](https://github.com/rfordatascience/tidytuesday/tree/master/data/2022/2022-05-17)

LOAD LIBRARIES

```{R}

library(here)
library(readr)
library(dplyr)
library(ggplot2)
library(here)
library(tidyr)
library(purrr)
library("tidylog")
```

SAVE DATA

```{R}


if(!file.exists(here("data"))){
  dir.create(here("data"))
}
url<- "https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-05-17/eurovision.csv"
if(!file.exists(here("data", "eurovision.csv"))){
  download.file(url, here("data", "eurovision.csv"))
}


```

LOAD DATA

Goal of the analysis is to define the success of countries.

We'll be looking at the number of times countries came up as finalists.

The number of times a country was top 5.

The number of times the country won.

```{R}

euro <- as_tibble(read_csv(here("data","eurovision.csv")))

```

# The number of times a country showed up in high-ranking sections
i.e., finals, semifinals etc.

We'll be looking at the `artist_country` and `section` variables. 
```{R }
distinct(euro, across(artist_country))
distinct(euro, across(section))
```

Turns out there are 52 distinct countries and 5 distinct sections. 

```{R }

euro_sections <- euro |> select(artist_country, section)
euro_sections <- euro_sections |> group_by(artist_country, section) |> summarise(n = n())
euro_sections_2 <- euro_sections |> group_by(section)


```

```{R }
split_euro <- group_split(euro_sections_2)

final_countries <- split_euro |> purrr::map(function(x) x[which.max(x$n), ])

# 
# 
# [[1]]
# # A tibble: 1 × 3
#   artist_country section     n
#   <chr>          <chr>   <int>
# 1 Germany        final      48
# 
# [[2]]
# # A tibble: 1 × 3
#   artist_country section              n
#   <chr>          <chr>            <int>
# 1 Belgium        first-semi-final    12
# 
# [[3]]
# # A tibble: 1 × 3
#   artist_country section         n
#   <chr>          <chr>       <int>
# 1 France         grand-final    19
# 
# [[4]]
# # A tibble: 1 × 3
#   artist_country section               n
#   <chr>          <chr>             <int>
# 1 Denmark        second-semi-final    10
# 
# [[5]]
# # A tibble: 1 × 3
#   artist_country section        n
#   <chr>          <chr>      <int>
# 1 Andorra        semi-final     4


```

Turns out that Germany has been in the finals 48 times so far and France has been in the 
grand-final 19 times! 


Plot Histogram 
```{R }
g <- ggplot(euro_sections, aes(x = artist_country, y = n )) + geom_bar(stat = "identity")+ 
  facet_wrap(~section)+
  scale_x_discrete(label=abbreviate) +
    theme(axis.text.x = element_text(angle = 0, hjust = 1, vjust = 0.5, size = 6)) + theme(axis.text.y = element_text(angle = 0, hjust = 1, vjust = 0.5, size = 3.4)) +coord_flip() + labs(title= " number of times countries appeared in high-ranking sections", subtitle= "5 sections", caption = "sourced from tidytuesday")
g

```



```{R}

euro$rank_lgl <- euro$rank |> map_lgl(function(x) x<=5)

euro_true <- euro |> group_by(rank_lgl, artist_country) |> summarise(n = n()) |> filter(rank_lgl == TRUE)
euro_false <- euro |> group_by(rank_lgl, artist_country) |> summarise(n = n()) |> filter(rank_lgl == FALSE)


euro_true_and_false <- inner_join(euro_true, euro_false, by = "artist_country")
euro_true_and_false <- euro_true_and_false |> mutate(prop = n.x/(n.x + n.y) )


### TIDYLOG OUTPUT ###
# group_by: 2 grouping variables (rank_lgl, artist_country)
# summarise: now 140 rows and 3 columns, one group variable remaining (rank_lgl)
# filter (grouped): removed 93 rows (66%), 47 rows remaining
# group_by: 2 grouping variables (rank_lgl, artist_country)
# summarise: now 140 rows and 3 columns, one group variable remaining (rank_lgl)
# filter (grouped): removed 88 rows (63%), 52 rows remaining
# inner_join: added 4 columns (rank_lgl.x, n.x, rank_lgl.y, n.y)
#             > rows only in x  ( 0)
#             > rows only in y  ( 5)
#             > matched rows     47
#             >                 ====
#             > rows total       47
# mutate: new variable 'prop' (double) with 41 unique values and 0% NA
 
```

Let's look at proportion of instances where country was top 5

```{R false, true }

g_2 <- ggplot(euro_true_and_false, aes(x = artist_country, y = prop)) + geom_point() +scale_x_discrete(label=abbreviate) +
    theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 6)) + labs(title= "Proportion of instances where country was Top 5", subtitle= " 47 countries", caption = "sourced from tidytuesday")
g_2
```
```{R }


```


## Functions used 

dplyr:: distinct, across, select , group_by, summarise, n, group_split, inner_join, mutate
purrr:: map, map_lgl
ggplot:: geom_bar, geom_point
